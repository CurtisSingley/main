// referenced https://learn.adafruit.com/photocells?view=all
// referenced https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/

int buttonPin = 3;        // the button is connected to pin 3
int redPin = 11;	  // the red led in the multicolor led is pin 11
int greenPin = 10;	  // the green led in the multicolor led is pin 10
int bluePin = 9;	  // the blue led in the multicolor led is pin 9
volatile int counter = 0; // initialize counter to switch cases when button is pressed, volatile in order to be read constantly
int photocellPin = 0;     // the photoresistor is connected to pin a0
int photocellReading;     // the analog reading from the sensor divider
int potPin = 2;           // the potentiometer is connected to pin a2
int potVal = 0;           // the value read by the potentiometer

void setup() {
  pinMode(buttonPin, INPUT_PULLUP);  // initialize the button to be read as an input
  pinMode(redPin, OUTPUT);    // initialize the other rgb led pins as outputs
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
  attachInterrupt(digitalPinToInterrupt(buttonPin), checkButton, LOW);  // sets up ISR to monitor button pin for when it is depressed
  Serial.begin(9600);         // used to start serial monitor for debugging
}

// changes voltages of pins to change color
void setColor(int red, int green, int blue)
{
  red = 255 - red;                // reversing the voltage is needed for common anode rgb led
  green = 255 - green;
  blue = 255 - blue;
  analogWrite(redPin, red);       // send voltages through respective pins
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);  
}

void loop() {
  
  switch (counter) {
    
    // solid color pink with photoresistor support
    case 0:
      Serial.print("counter is at 0");
      photocellReading = analogRead(photocellPin); 
      Serial.println(photocellReading);
      if (photocellReading < 512) {     // sets color to bright pink if ambient light is dim
      setColor(255,192,203);
      }
      else {                            // else sets color to dimmer pink
      setColor(80,0,80);
      }
      break;
  
    // solid color green with photoresistor support
    case 1:
      Serial.print("counter is at 1");
      photocellReading = analogRead(photocellPin); 
      Serial.println(photocellReading);
      if (photocellReading < 512) {
        setColor(144,238,144);
      }
      else {
        setColor(0,255,0);
      }
      break;
  
    // solid color blue with photoresistor support
    case 2:
      Serial.print("counter is at 2");
      photocellReading = analogRead(photocellPin); 
      Serial.println(photocellReading);
      if (photocellReading < 512) {
        setColor(0,255,255);
      }
      else {
        setColor(0,0,255);
      }
      break;
  
    // special mode to change the color with the potentiometer
    case 3:
      Serial.print("counter is at 3");
      potVal = analogRead(potPin);
      potVal = map(val, 0, 1024, 0, 255);
      setColor(155,val,155);
      break;
  
    // color loop that automatically rotates between 4 colors
    case 4:
      Serial.print("counter is at 4");
      setColor(0,255,0); // green
      delay(1000); 
      setColor(0,0,255); // blue
      delay(1000); 
      setColor(80,0,80); // pink
      delay(1000); 
      setColor(0,255,255); // aqua
      break;
  
    // color loop and flash
    case 5:
      Serial.print("counter is at 5");
      setColor(0,255,0); // green
      delay(50);
      setColor(0,0,255); // blue
      delay(50); 
      setColor(80,0,80); // pink
      delay(50); 
      setColor(0,255,255); // aqua
      delay(50); 
      break;
  
    default:
      counter = 0;  // start over if counter is outside of possible cases
      break;
  }
delay(1000);
}

void checkButton() {
  counter++;  // increases counter upon interrupt
} 
