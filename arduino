int buttonPin = 3;
int redPin = 11;
int greenPin = 10;
int bluePin = 9;
int counter = 0;
int photocellPin = 0;     // the cell and 10K pulldown are connected to a0
int photocellReading;     // the analog reading from the sensor divider
//int LEDpin = 3;          // connect Red LED to pin 11 (PWM pin)
int LEDbrightness;        

void setup() {
  pinMode(buttonPin, INPUT);
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
  Serial.begin(9600);
}

// creates a color loop that first checks for the button
// being pressed down before going to the next color
void colorRoutine(int color1, int color2, int color3) {
  int buttonState;
  buttonState = digitalRead(buttonPin);
  
  if (buttonState != LOW) {
    setColor(color1, color2, color3);
  }
  
  else {
    counter++;
    delay(800);
  }
}

// changes voltages of pins to change color
void setColor(int red, int green, int blue)
{
  red = 255 - red;
  green = 255 - green;
  blue = 255 - blue;
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);  
}

// sets brightness based on photoresistor
void photoResistor(int int1, int int2, int int3)
{
  int tint1;
  int tint2;
  int tint3;
  photocellReading = analogRead(photocellPin); 
  Serial.println(photocellReading);
  // photocellReading = 1023 - photocellReading;
  LEDbrightness = map(photocellReading, 0, 1023, 0, 255);
  tint1 = int1 * LEDbrightness / (int1 + int2 + int3);
  Serial.println("RED VALUE:");
  Serial.println(tint1);
  tint2 = int2 * LEDbrightness / (int1 + int2 + int3);
  Serial.println("GREEN VALUE:");
  Serial.println(tint2);
  tint3 = int3 * LEDbrightness / (int1 + int2 + int3);
  Serial.println("BLUE VALUE:");
  Serial.println(tint3);
  analogWrite(redPin, tint1);
  analogWrite(greenPin, tint2);
  analogWrite(bluePin, tint3);
  delay(40);
}

void loop() {
  int buttonState;
  buttonState = digitalRead(buttonPin);
  
  if (buttonState == LOW) {
    // counter increases every time button is
    // pressed. This makes it go to the next case 
    counter++;

    // a delay is necessary or else even holding
    // down the button for 25ms might result in the
    // counter increasing by 50 
    delay(1000);
  }
  
  // solid color
  else if (counter == 0) {
    photoResistor(80,0,80); // pink
    Serial.print("counter is at 0");
    delay(1000);
  }
  
  else if (counter == 1) {
    photoResistor(0,255,0); // green
    Serial.print("counter is at 1");
    delay(1000);
  }
  
  else if (counter == 2) {
    photoResistor(0,0,255); // blue
    Serial.print("counter is at 2");
    delay(1000);
  }
  
  // color loop
  else if (counter == 3) {
    // call colorRoutine to check for button and
    // change color
    Serial.print("counter is at 3");
    colorRoutine(0,255,0); // green
    delay(1000); 
    colorRoutine(0,0,255); // blue
    delay(1000); 
    colorRoutine(80,0,80); // pink
    delay(1000); 
    colorRoutine(0,255,255); // aqua
    delay(1000); 
  }
  
  // color loop and flash
  else if (counter == 4) {
    // call colorRoutine to check for button and
    // change color
    Serial.print("counter is at 4");
    colorRoutine(0,255,0); // green
    delay(50);
    colorRoutine(0,0,255); // blue
    delay(50); 
    colorRoutine(80,0,80); // pink
    delay(50); 
    colorRoutine(0,255,255); // aqua
    delay(50); 
  }
  
  else {
    counter = 0;
  }
}

